"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkyaml_generator"] = self["webpackChunkyaml_generator"] || []).push([["node_modules_digi_arbetsformedlingen_dist_esm_digi-util-resize-observer_entry_js"],{

/***/ "./node_modules/@digi/arbetsformedlingen/dist/esm/digi-util-resize-observer.entry.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@digi/arbetsformedlingen/dist/esm/digi-util-resize-observer.entry.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digi_util_resize_observer: () => (/* binding */ UtilResizeObserver)\n/* harmony export */ });\n/* harmony import */ var _index_de760108_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-de760108.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/index-de760108.js\");\n\n\nconst utilResizeObserverCss = \".sc-digi-util-resize-observer-h{display:block}\";\nconst DigiUtilResizeObserverStyle0 = utilResizeObserverCss;\n\nconst UtilResizeObserver = class {\n    constructor(hostRef) {\n        (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.afOnChange = (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"afOnChange\", 7);\n        this._observer = null;\n    }\n    componentWillLoad() {\n        this.initObserver();\n    }\n    disconnectedCallback() {\n        this.removeObserver();\n    }\n    initObserver() {\n        this._observer = new ResizeObserver(([entry]) => {\n            this.afOnChange.emit(entry);\n        });\n        this._observer.observe(this.hostElement);\n    }\n    removeObserver() {\n        this._observer.disconnect();\n    }\n    changeHandler(e) {\n        this.afOnChange.emit(e);\n    }\n    render() {\n        return (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { key: 'b12dbf5ce3c19335c8deb5ff38debbbc621d0030' });\n    }\n    get hostElement() { return (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n};\nUtilResizeObserver.style = DigiUtilResizeObserverStyle0;\n\n\n\n\n//# sourceURL=webpack://yaml-generator/./node_modules/@digi/arbetsformedlingen/dist/esm/digi-util-resize-observer.entry.js?");

/***/ })

}]);