"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkyaml_generator"] = self["webpackChunkyaml_generator"] || []).push([["node_modules_digi_arbetsformedlingen_dist_esm_digi-form-category-filter_entry_js"],{

/***/ "./node_modules/@digi/arbetsformedlingen/dist/esm/digi-form-category-filter.entry.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@digi/arbetsformedlingen/dist/esm/digi-form-category-filter.entry.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digi_form_category_filter: () => (/* binding */ FormCategoryFilter)\n/* harmony export */ });\n/* harmony import */ var _index_de760108_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-de760108.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/index-de760108.js\");\n\n\nconst formCategoryFilterCss = \".sc-digi-form-category-filter-h{--digi--form-category-filter--gap:var(--digi--padding--small)}.sc-digi-form-category-filter-h .digi-form-category-filter.sc-digi-form-category-filter{display:flex;flex-wrap:wrap;gap:var(--digi--form-category-filter--gap)}.sc-digi-form-category-filter-h .digi-form-category-filter--category.sc-digi-form-category-filter{--digi--button--icon--spacing:0px}.sc-digi-form-category-filter-h .digi-form-category-filter--category--not-selected.sc-digi-form-category-filter{--digi--button--color--background--primary--default:var(--digi--color--background--secondary);--digi--button--color--text--primary--default:var(--digi--color--text--secondary);--digi--button--color--border--primary--default:var(--digi--color--background--secondary)}.sc-digi-form-category-filter-h .digi-form-category-filter--category--thin-text.sc-digi-form-category-filter{font-weight:400}\";\nconst DigiFormCategoryFilterStyle0 = formCategoryFilterCss;\n\nconst FormCategoryFilter = class {\n    constructor(hostRef) {\n        (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        this.afOnSelectedCategoryChange = (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"afOnSelectedCategoryChange\", 7);\n        this.afCategories = [];\n        this.afAllCategories = true;\n        this.afAllCategoriesSelected = true;\n        this.afAllCategoriesText = \"Alla kategorier\";\n        this.afVisibleCollapsed = 5;\n        this.afStartCollapsed = true;\n        this.afMultiselect = true;\n        this.selectedCategories = [];\n        this.collapsed = false;\n    }\n    afCategoriesChangeHandler() {\n        this.selectedCategories = this.afCategories.filter(category => category.selected).map(category => category.name);\n        if (this.selectedCategories.length === 0 && this.afAllCategories && this.afAllCategoriesSelected)\n            this.selectedCategories = [this.afAllCategoriesText];\n    }\n    componentWillLoad() { }\n    componentDidLoad() {\n        this.afCategoriesChangeHandler();\n        this.collapsed = this.afStartCollapsed;\n    }\n    componentWillUpdate() { }\n    displayCategories() {\n        if (this.afAllCategories) {\n            if (this.collapsed && this.afCategories.length + 1 > this.afVisibleCollapsed)\n                return [{ name: this.afAllCategoriesText }, ...this.afCategories.slice(0, this.afVisibleCollapsed - 1)];\n            return [{ name: this.afAllCategoriesText }, ...this.afCategories];\n        }\n        if (this.collapsed && this.afCategories.length > this.afVisibleCollapsed)\n            return this.afCategories.slice(0, this.afVisibleCollapsed);\n        return this.afCategories;\n    }\n    toggleCategory(category) {\n        if (!this.afMultiselect) {\n            if (this.afAllCategories && category.name === this.afAllCategoriesText) {\n                if (this.selectedCategories.includes(this.afAllCategoriesText)) {\n                    this.selectedCategories = [];\n                    this.afOnSelectedCategoryChange.emit([]);\n                }\n                else {\n                    this.selectedCategories = [this.afAllCategoriesText];\n                    this.afOnSelectedCategoryChange.emit(this.afCategories.map(category => category.name));\n                }\n            }\n            // Not allCategories\n            this.selectedCategories = [category.name];\n            this.afOnSelectedCategoryChange.emit(this.selectedCategories);\n            return;\n        }\n        if (this.afAllCategories && category.name === this.afAllCategoriesText) {\n            if (this.selectedCategories.includes(this.afAllCategoriesText)) {\n                this.selectedCategories = [];\n                this.afOnSelectedCategoryChange.emit([]);\n            }\n            else {\n                this.selectedCategories = [this.afAllCategoriesText];\n                this.afOnSelectedCategoryChange.emit(this.afCategories.map(category => category.name));\n            }\n        }\n        else {\n            if (this.selectedCategories.findIndex(name => name === category.name) >= 0)\n                this.selectedCategories = this.selectedCategories.filter(name => name !== category.name);\n            else if (this.afAllCategories)\n                this.selectedCategories = [...this.selectedCategories.filter(name => name !== this.afAllCategoriesText), category.name];\n            else\n                this.selectedCategories = [...this.selectedCategories, category.name];\n            this.afOnSelectedCategoryChange.emit(this.selectedCategories);\n        }\n    }\n    toggleCollapsed() {\n        this.collapsed = !this.collapsed;\n    }\n    render() {\n        return ((0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.H, { key: '951b0a320f6f43d47192d14014c82e7d6ea78e53' }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: 'e991754dba693d8934c29a0046291150e5be1be7', class: {\n                'digi-form-category-filter': true\n            } }, this.displayCategories().map(category => (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-button\", { class: {\n                'digi-form-category-filter--category': true,\n                'digi-form-category-filter--category--not-selected': !this.selectedCategories.includes(category.name)\n            }, afVariation: 'primary', afAriaPressed: this.selectedCategories.includes(category.name), onAfOnClick: () => { this.toggleCategory(category); } }, typeof category.hits === \"undefined\" && category.name, typeof category.hits !== \"undefined\" && (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", null, category.name, \" \", (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { class: 'digi-form-category-filter--category--thin-text' }, \"(\", category.hits, \")\")))), this.afCategories.length > this.afVisibleCollapsed &&\n            (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", null, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-button\", { afVariation: 'function', afAriaExpanded: !this.collapsed, onClick: () => { this.toggleCollapsed(); } }, this.collapsed ? 'Visa alla' : 'Visa f√§rre', this.collapsed ?\n                (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-plus\", { slot: \"icon\", \"aria-hidden\": \"true\" }) :\n                (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-minus\", { slot: \"icon\", \"aria-hidden\": \"true\" }))))));\n    }\n    get hostElement() { return (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n    static get watchers() { return {\n        \"afCategories\": [\"afCategoriesChangeHandler\"]\n    }; }\n};\nFormCategoryFilter.style = DigiFormCategoryFilterStyle0;\n\n\n\n\n//# sourceURL=webpack://yaml-generator/./node_modules/@digi/arbetsformedlingen/dist/esm/digi-form-category-filter.entry.js?");

/***/ })

}]);