"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkyaml_generator"] = self["webpackChunkyaml_generator"] || []).push([["vendors-node_modules_digi_arbetsformedlingen_dist_esm_digi-bar-chart_entry_js"],{

/***/ "./node_modules/@digi/arbetsformedlingen/dist/esm/bar-chart-variation.enum-12d229ed.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@digi/arbetsformedlingen/dist/esm/bar-chart-variation.enum-12d229ed.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B: () => (/* binding */ BarChartVariation)\n/* harmony export */ });\nvar BarChartVariation;\n(function (BarChartVariation) {\n    BarChartVariation[\"Vertical\"] = \"vertical\";\n    BarChartVariation[\"Horizontal\"] = \"horizontal\";\n})(BarChartVariation || (BarChartVariation = {}));\n\n\n\n\n//# sourceURL=webpack://yaml-generator/./node_modules/@digi/arbetsformedlingen/dist/esm/bar-chart-variation.enum-12d229ed.js?");

/***/ }),

/***/ "./node_modules/@digi/arbetsformedlingen/dist/esm/digi-bar-chart.entry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@digi/arbetsformedlingen/dist/esm/digi-bar-chart.entry.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digi_bar_chart: () => (/* binding */ barChart)\n/* harmony export */ });\n/* harmony import */ var _index_de760108_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-de760108.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/index-de760108.js\");\n/* harmony import */ var _linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear-ef018ffb.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/linear-ef018ffb.js\");\n/* harmony import */ var _text_f08f550e_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./text-f08f550e.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/text-f08f550e.js\");\n/* harmony import */ var _randomIdGenerator_util_9cf19c59_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./randomIdGenerator.util-9cf19c59.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/randomIdGenerator.util-9cf19c59.js\");\n/* harmony import */ var _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bar-chart-variation.enum-12d229ed.js */ \"./node_modules/@digi/arbetsformedlingen/dist/esm/bar-chart-variation.enum-12d229ed.js\");\n\n\n\n\n\n\nfunction band() {\n  var scale = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.o)().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.r)(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return _linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.i.apply(rescale(), arguments);\n}\n\nconst barChartCss = \".sc-digi-bar-chart-h .digi-bar-chart.sc-digi-bar-chart{font-family:var(--digi--global--typography--font-family--default)}.sc-digi-bar-chart-h .chartTitle.sc-digi-bar-chart{--digi--typography--h2--margin:0.5rem;--digi--typography--h3--margin:0.5rem;--digi--typography--h4--margin:0.5rem;--digi--typography--h5--margin:0.5rem;--digi--typography--h6--margin:0.5rem;display:flex;justify-content:flex-start;flex-direction:column;align-items:left;text-align:left;padding-bottom:1rem;margin-right:0.5rem;flex-grow:2}.sc-digi-bar-chart-h .buttonWrapper.sc-digi-bar-chart{--digi--button--padding--medium:4px 4px 0.8125rem 0}.sc-digi-bar-chart-h .chartTooltip.sc-digi-bar-chart{box-sizing:border-box;position:absolute;background-color:rgba(250, 250, 250, 0.98);color:black;padding:5px 10px;padding-right:5px;border-radius:4px;display:flex;flex-direction:row;align-items:flex-start;box-shadow:rgba(60, 64, 67, 0.4) 0px 1px 2px 0px, rgba(60, 64, 67, 0.2) 0px 2px 6px 2px;font-size:0.875rem;display:none}.sc-digi-bar-chart-h .close.sc-digi-bar-chart{--digi--icon--color:black;cursor:pointer;margin-top:-5px}.sc-digi-bar-chart-h .legend.sc-digi-bar-chart::-webkit-scrollbar,.sc-digi-bar-chart-h .table.sc-digi-bar-chart::-webkit-scrollbar{height:10px;width:10px}.sc-digi-bar-chart-h .legend.sc-digi-bar-chart::-webkit-scrollbar-track,.sc-digi-bar-chart-h .table.sc-digi-bar-chart::-webkit-scrollbar-track{background:whitesmoke;border-radius:4px}.sc-digi-bar-chart-h .legend.sc-digi-bar-chart::-webkit-scrollbar-thumb,.sc-digi-bar-chart-h .table.sc-digi-bar-chart::-webkit-scrollbar-thumb{background-color:lightgray;border-radius:4px;border:0}.sc-digi-bar-chart-h .scChartStatus.sc-digi-bar-chart{border:0;clip:rect(1px, 1px, 1px, 1px);clip-path:inset(50%);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sc-digi-bar-chart-h .table.sc-digi-bar-chart{display:none;overflow-y:scroll;height:fit-content;border-radius:4px;padding:0.25rem;background:linear-gradient(white 30%, rgba(255, 255, 255, 0)) center top, linear-gradient(rgba(255, 255, 255, 0), white 70%) center bottom, radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0)) center top, radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0)) center bottom;background-repeat:no-repeat;background-size:100% 40px, 100% 40px, 100% 14px, 100% 14px;background-attachment:local, local, scroll, scroll}.sc-digi-bar-chart-h .topWrapper.sc-digi-bar-chart{display:flex;flex-direction:row;align-items:flex-end;justify-content:space-between;flex-wrap:wrap}\";\nconst DigiBarChartStyle0 = barChartCss;\n\nconst barChart = class {\n    constructor(hostRef) {\n        (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n        // States\n        this._loading = false;\n        this._placeholderTicks = ['0', '1', '2', '3', '4', '5', '6', '7'];\n        this._dims = {};\n        this._margin = {\n            bottom: 0,\n            top: 6,\n            left: 5,\n            right: 15,\n            ellipsis: false\n        };\n        this.tickPadding = 8;\n        this.yTickSize = 0;\n        this.xTickSize = 5;\n        // Width of the largets X-tick-value\n        this._tickWidth = 1;\n        // Transition\n        this.defaultDuration = 400;\n        // Text and formats\n        this.fontSize = '0.875rem';\n        // Observer for watching size changes when in line chart mode\n        this.barChartObserver = new ResizeObserver(entries => {\n            entries.forEach(() => {\n                if (this._loading)\n                    return this.loadingResize();\n                this.resize();\n            });\n        });\n        // Observer for watching size changes when in table mode\n        this.tableObserver = new ResizeObserver(entries => {\n            entries.forEach(() => {\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._legendDiv).style('width', (this._dims.width) + 'px');\n                this.resizeTable();\n            });\n        });\n        // Resizing chart while loading\n        this.loadingResize = () => {\n            const newHeight = this.setDims();\n            this.setMargins(true);\n            this._svg.attr('width', this._dims.width).attr('height', this._dims.height);\n            this._barChartContainer\n                .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n            this._margin.right = this.getTextSize(this._xScale.domain()[1].toLocaleString()) / 2 + this.yTickSize + this.tickPadding;\n            // If there is a new height\n            if (newHeight) {\n                // Update y-axis with potentially new height (might want to do a check here)\n                this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.range([this._margin.top, this._dims.height - this._margin.bottom]) : this._yScale.range([this._dims.height - this._margin.bottom, this._margin.top]);\n                this._xAxisHandle.attr('transform', `translate(0,${this._dims.height - this._margin.bottom})`);\n            }\n            // Update x-axis with new width\n            this._xScale.range([0, this._dims.width - this._margin.right - this._margin.left]);\n            this._barSelection\n                .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth());\n            this.setValueTicks();\n        };\n        // Adding click listener for tool tip text\n        this.setTickInteraction = () => {\n            if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._yAxisHandle.selectAll('text')\n                    .style('cursor', 'pointer')\n                    .on('click', this.openTooltip)\n                    .on('mouseenter', this.hover)\n                    .on('mouseleave', this.hoverOut);\n            }\n            else {\n                this._xAxisHandle.selectAll('text')\n                    .style('cursor', 'pointer')\n                    .on('click', this.openTooltip)\n                    .on('mouseenter', this.hover)\n                    .on('mouseleave', this.hoverOut);\n            }\n        };\n        // Setting Y-scale\n        this.setYScale = (empty) => {\n            var _a;\n            if (this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._yScale = band(empty ? ['0', '1', '2', '3', '4', '5', '6', '7'] : this._chartData.data.xValueNames, [this._margin.top, this._dims.height - this._margin.bottom])\n                    .paddingOuter(0.1)\n                    .paddingInner(0.1);\n                this._yAxis = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.a)(this._yScale);\n            }\n            else {\n                this._yScale = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.l)()\n                    .domain(empty ? [0, 10] : [this._minVal, this._maxVal])\n                    .nice(((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.numberOfReferenceLines) ? this._chartData.meta.numberOfReferenceLines : 3);\n                this._yScale.range([this._dims.height - this._margin.bottom, this._margin.top]);\n                this._yAxis = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.a)(this._yScale);\n            }\n        };\n        // Setting X-Scale\n        this.setXScale = (empty) => {\n            // Horizontal\n            if (this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._xScale = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.l)()\n                    .domain(empty ? [0, 10] : [this._minVal, this._maxVal])\n                    .nice(3);\n                this._margin.right = this.getTextSize(this._xScale.domain()[1].toLocaleString()) / 2 + this.yTickSize + this.tickPadding;\n                this._xScale.range([0, this._dims.width - this._margin.right - this._margin.left]);\n                // Initializing actual axis\n                this._xAxis = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.b)(this._xScale);\n                this._tickWidth = this.getLargestText(this._xScale.ticks().map((tick) => tick.toLocaleString()));\n            }\n            else { // Vertical\n                this._xScale = band()\n                    .domain(empty ? this._placeholderTicks : this._chartData.data.xValueNames)\n                    .range([0, this._dims.width - this._margin.right - this._margin.left])\n                    .paddingOuter(0.1)\n                    .paddingInner(0.1);\n                this._xAxis = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.b)(this._xScale);\n            }\n        };\n        // Stores all tick text sizes in an indexable array\n        this.tickSizes = () => {\n            // Initializing tick size array\n            this._namedTickSizes = [];\n            this._ellipsisSize = this.getTextSize('...');\n            for (let i = 0; i < this._chartData.data.xValueNames.length; i++) {\n                this._namedTickSizes.push(Math.ceil(this.getTextSize(this._chartData.data.xValueNames[i])));\n            }\n        };\n        this.updateBars = (fromLoading) => {\n            this._barChartContainer.selectAll('.barGroup')\n                .data(this.reshapeData)\n                .join(enter => {\n                var _a;\n                const tempSelection = enter.append(\"g\")\n                    .attr(\"class\", \"barGroup\")\n                    .attr('id', (d) => 'barGroup' + d.key.replace(/[^A-Z0-9]+/ig, \"_\"));\n                tempSelection.append('rect')\n                    .attr('class', 'bar')\n                    .style('cursor', 'pointer')\n                    .attr('ry', 4)\n                    .attr('rx', 4)\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                    .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                    .attr('width', () => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 0 : this._xScale.bandwidth())\n                    .attr('height', () => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : 0)\n                    .on('mouseenter', this.hover)\n                    .on('mouseleave', this.hoverOut)\n                    .on('click', this.openTooltip)\n                    .transition()\n                    .duration(this.defaultDuration)\n                    .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                    .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n                    .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value))\n                    .attr('fill', '#00005a');\n                if (!((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.valueLabels))\n                    return tempSelection;\n                tempSelection.append('text')\n                    .text((d) => d.value.toLocaleString())\n                    .attr('class', 'barText')\n                    .attr('font-size', this.fontSize)\n                    .attr('font-weight', '600')\n                    .attr(\"text-anchor\", \"end\")\n                    .style('pointer-events', 'none')\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) + (this._yScale.bandwidth() / 2) : (this._dims.height - this._margin.bottom))\n                    .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key) + (this._xScale.bandwidth() / 2))\n                    .transition()\n                    .duration(this.defaultDuration)\n                    .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                    .attr('font-size', this.fontSize)\n                    .attr('font-weight', '600')\n                    .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale(d.key) + (this._xScale.bandwidth() / 2))\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) + (this._yScale.bandwidth() / 2) : this._yScale(d.value))\n                    .attr(\"text-anchor\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                        return 'middle';\n                    return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'start' : 'end';\n                })\n                    .attr(\"dx\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal)\n                        return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? this.tickPadding : -this.tickPadding;\n                    return 0;\n                })\n                    .attr(\"fill\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                        return 'black';\n                    return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'black' : 'white';\n                })\n                    .attr(\"dy\", () => this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? '0.35em' : '-0.25em')\n                    .style('pointer-events', 'none')\n                    .attrTween(\"text\", (d, i, nodelist) => {\n                    const oldnum = parseFloat(nodelist[i].textContent.replace(/\\s/g, '')) ? parseFloat(nodelist[i].textContent.replace(/\\s/g, '')) : 0;\n                    let interpolatedValue = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.c)(oldnum, d.value);\n                    return (t) => nodelist[i].textContent = parseInt(interpolatedValue(t)).toLocaleString(undefined, this._numberFormat);\n                });\n                return tempSelection;\n            }, update => {\n                // Update ids to bars\n                update.attr('id', (d) => 'barGroup' + d.key.replace(/[^A-Z0-9]+/ig, \"_\"));\n                // Mouse interaction to updated loading bars\n                if (fromLoading) {\n                    update.select('rect').on('mouseenter', this.hover)\n                        .on('mouseleave', this.hoverOut)\n                        .on('click', this.openTooltip)\n                        .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                        .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                        .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n                        .attr('height', () => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : 0)\n                        .attr('fill', '#00005a')\n                        .transition()\n                        .duration(this.defaultDuration)\n                        .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                        .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n                        .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value))\n                        .on('end', () => this.barChartObserver.observe(this._chartDiv)); // Reset barchartObserver\n                }\n                else {\n                    update.select('rect')\n                        .transition()\n                        .duration(this.defaultDuration)\n                        .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                        .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n                        .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                        .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n                        .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value))\n                        .attr('fill', '#00005a');\n                }\n                return update.select('text')\n                    .style('display', () => { var _a; return ((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.valueLabels) ? null : 'none'; })\n                    .transition()\n                    .duration(this.defaultDuration)\n                    .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                    .attr('font-size', this.fontSize)\n                    .attr('font-weight', '600')\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) + (this._yScale.bandwidth() / 2) : this._yScale(d.value))\n                    .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale(d.key) + (this._xScale.bandwidth() / 2))\n                    .attr(\"text-anchor\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                        return 'middle';\n                    return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'start' : 'end';\n                })\n                    .attr(\"dx\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal)\n                        return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? this.tickPadding : -this.tickPadding;\n                    return 0;\n                })\n                    .attr(\"fill\", (d) => {\n                    if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                        return 'black';\n                    return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'black' : 'white';\n                })\n                    .attr(\"dy\", () => this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? '0.35em' : '-0.25em')\n                    .style('pointer-events', 'none')\n                    .attrTween(\"text\", (d, i, nodelist) => {\n                    const oldnum = parseFloat(nodelist[i].textContent.replace(/\\s/g, '')) ? parseFloat(nodelist[i].textContent.replace(/\\s/g, '')) : 0;\n                    let interpolatedValue = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.c)(oldnum, d.value);\n                    return (t) => nodelist[i].textContent = parseInt(interpolatedValue(t)).toLocaleString(undefined, this._numberFormat);\n                });\n            }, exit => exit.remove());\n            this._barSelection = this._barChartContainer.selectAll('rect');\n            this._textSelection = this._barChartContainer.selectAll('.barText');\n        };\n        // Setting position of text according to bar size\n        this.adjustBarText = () => {\n            var _a;\n            if (!((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.valueLabels))\n                return;\n            this._textSelection\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) + (this._yScale.bandwidth() / 2) : this._yScale(d.value))\n                .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale(d.key) + (this._xScale.bandwidth() / 2))\n                .attr(\"dx\", (d) => {\n                if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal)\n                    return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? this.tickPadding : -this.tickPadding;\n                return 0;\n            })\n                .attr(\"fill\", (d) => {\n                if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                    return 'black';\n                return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'black' : 'white';\n            })\n                .attr(\"text-anchor\", (d) => {\n                if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                    return 'middle';\n                return this._xScale(d.value) < (d.len + this.tickPadding * 2) ? 'start' : 'end';\n            });\n        };\n        this.reshapeData = () => {\n            let toReturn = [];\n            if (this._loading) {\n                this._placeholderTicks.forEach((key) => {\n                    toReturn.push({ key: key, value: Math.floor(Math.random() * (9 - 2 + 1) + 2), len: '1' });\n                });\n                return toReturn;\n            }\n            this._chartData.data.xValueNames.forEach((key, index) => {\n                toReturn.push({ key: key, value: this._chartData.data.series[0].yValues[index], len: this.getTextSize(this._chartData.data.series[0].yValues[index].toLocaleString()) });\n            });\n            return toReturn;\n        };\n        this.adjustBarSize = () => {\n            this._barSelection\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n                .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n                .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value));\n        };\n        // Resize table\n        this.resizeTable = () => {\n            this.setDims();\n            this.setTableDimensions();\n        };\n        // Setting dimension variable\n        this.setDims = (onlyHeight = false) => {\n            // Get title dimensions\n            const tempTitle = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).node().getBoundingClientRect(), tempLegend = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._legendDiv).node().getBoundingClientRect();\n            const prevHeight = this._dims.height;\n            if (!onlyHeight)\n                this._dims = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).node().getBoundingClientRect();\n            this._dims.height = this._maxHeight - tempLegend.height - tempTitle.height - (1.75 * this._rem);\n            return prevHeight != this._dims.height;\n        };\n        // Setting margins given text size\n        this.setMargins = (fromLoading) => {\n            this._pixelSize = ((Number(window.getComputedStyle(document.body).getPropertyValue('font-size').match(/\\d+/)[0]) * Number(this.fontSize.replace(/[^\\d.]|\\.(?=.*\\.)/g, ''))));\n            // Getting the longest word, assuming it will also be the widest in terms of pixels\n            if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._margin.left = this.getLargestText(this._chartData.data.xValueNames);\n            }\n            else\n                this._margin.left = this.getLargestText(fromLoading ? ['0', '10'] : [this._minVal ? this._tempScale[0].toLocaleString() : '0', this._maxVal ? this._tempScale[1].toLocaleString() : '10']);\n            if (this._margin.left > this._dims.width / 4) {\n                this._margin.left = Math.floor(this._dims.width / 4);\n                this._margin.ellipsis = true;\n            }\n            else\n                this._margin.ellipsis = false;\n            this._margin.bottom = this._pixelSize + this.tickPadding + this.xTickSize;\n        };\n        // Adjusting y-ticks\n        this.setNamedTicks = (transition = false) => {\n            if (this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                if (!transition) {\n                    this._yAxisHandle\n                        .style('font-size', this.fontSize)\n                        .style('font-family', 'Open Sans')\n                        .call(this._yAxis\n                        .tickPadding(this.tickPadding)\n                        .tickSize(this.yTickSize)\n                        .tickSizeOuter(0)\n                        .tickFormat((d, i) => {\n                        if (!this._margin.ellipsis)\n                            return d.toLocaleString();\n                        // Adding ellipsis to text\n                        const size = this._namedTickSizes[i] + this.tickPadding + this.yTickSize;\n                        const mSize = this._margin.left;\n                        if (size < mSize)\n                            return d.toLocaleString();\n                        const newSize = this.getTextSize(d.slice(0, Math.max(Math.floor((mSize / (size + this._ellipsisSize)) * d.length), 3)) + '...');\n                        let adjustment = 0;\n                        if (newSize > mSize) {\n                            adjustment = Math.ceil((newSize - mSize) / (size / d.length));\n                        }\n                        // Slicing the text up, saving atleast 3 characters\n                        return d.slice(0, Math.max(Math.floor((mSize / (size + this._ellipsisSize)) * (d.length)) - adjustment, 3)) + '...';\n                    }));\n                }\n                else {\n                    this._yAxisHandle\n                        .style('font-size', this.fontSize)\n                        .style('font-family', 'Open Sans')\n                        .transition()\n                        .duration(this.defaultDuration)\n                        .call(this._yAxis\n                        .tickPadding(this.tickPadding)\n                        .tickSize(this.yTickSize)\n                        .tickSizeOuter(0)\n                        .tickFormat((d, i) => {\n                        if (!this._margin.ellipsis)\n                            return d;\n                        // Adding ellipsis to text\n                        const size = this._namedTickSizes[i] + this.tickPadding + this.yTickSize;\n                        const mSize = this._margin.left;\n                        if (size < mSize)\n                            return d;\n                        const newSize = this.getTextSize(d.slice(0, Math.max(Math.floor((mSize / (size + this._ellipsisSize)) * d.length), 3)) + '...');\n                        let adjustment = 0;\n                        if (newSize > mSize) {\n                            adjustment = Math.ceil((newSize - mSize) / (size / d.length));\n                        }\n                        // Slicing the text up, saving atleast 3 characters\n                        return d.slice(0, Math.max(Math.floor((mSize / (size + this._ellipsisSize)) * (d.length)) - adjustment, 3)) + '...';\n                    }));\n                }\n            }\n            else {\n                //Calculating every n:th text to show\n                let nTh = Math.round(this._chartData.data.xValues.length / (((this._dims.width - this._margin.left - this._margin.right) / 90) - 1));\n                if (Math.floor(this._chartData.data.xValues.length / nTh) < 4) {\n                    nTh = Math.round((this._chartData.data.xValues.length) / 4);\n                }\n                const allowedWidth = (this._dims.width - this._margin.left - this._margin.right) / Math.floor(this._chartData.data.xValues.length / nTh + 1);\n                if (!transition) {\n                    this._xAxisHandle\n                        .style('font-size', this.fontSize)\n                        .style('font-family', 'Open Sans')\n                        .call(this._xAxis\n                        .tickValues(this._xScale.domain().filter((...[, i]) => {\n                        if (i == 0)\n                            return true;\n                        else {\n                            return i % nTh == 0;\n                        }\n                    }))\n                        .tickPadding(this.tickPadding)\n                        .tickSize(this.xTickSize)\n                        .tickSizeOuter(0)\n                        .tickFormat((d, i) => {\n                        const index = i * nTh;\n                        if (this._namedTickSizes[index] < allowedWidth)\n                            return d;\n                        return d.slice(0, Math.max(Math.floor((allowedWidth / ((this._namedTickSizes[index] + this._ellipsisSize) + 5)) * (d.length)), 3)) + '...';\n                    }));\n                }\n                else {\n                    this._xAxisHandle\n                        .style('font-size', this.fontSize)\n                        .style('font-family', 'Open Sans')\n                        .transition()\n                        .duration(this.defaultDuration)\n                        .call(this._xAxis\n                        .tickValues(this._xScale.domain().filter((...[, i]) => {\n                        if (i == 0)\n                            return true;\n                        else {\n                            return i % nTh == 0;\n                        }\n                    }))\n                        .tickPadding(this.tickPadding)\n                        .tickSize(this.xTickSize)\n                        .tickSizeOuter(0)\n                        .tickFormat((d, i) => {\n                        const index = i * nTh;\n                        if (this._namedTickSizes[index] < allowedWidth)\n                            return d;\n                        return d.slice(0, Math.max(Math.floor((allowedWidth / ((this._namedTickSizes[index] + this._ellipsisSize) + 5)) * (d.length)), 3)) + '...';\n                    }));\n                }\n            }\n        };\n        // Positioning the ticks of the value bearing axis\n        this.setValueTicks = (transition = false) => {\n            if (this._chartData.meta && this._chartData.meta.hideXAxis) {\n                this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xAxisHandle.attr('display', 'none') : this._yAxisHandle.attr('display', 'none');\n                return;\n            }\n            let toCall, tickSize, handle;\n            if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._xAxisHandle.attr('display', null);\n                toCall = this._xAxis;\n                tickSize = -(this._dims.height - this._margin.top - this._margin.bottom);\n                handle = this._xAxisHandle;\n            }\n            else {\n                this._yAxisHandle.attr('display', null);\n                toCall = this._yAxis;\n                tickSize = -(this._dims.width - this._margin.left - this._margin.right);\n                handle = this._yAxisHandle;\n            }\n            // Computing the amount of ticks to show\n            const ticks = Math.min(Math.floor((this._dims.width - this._margin.left - this._margin.right) / (this._tickWidth + this.xTickSize)) - 2, this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale.ticks().length : this._yScale.ticks().length);\n            if (!transition) {\n                handle\n                    .style('font-size', this.fontSize)\n                    .style('font-family', 'Open Sans')\n                    .call(toCall\n                    .ticks(this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? Math.max(2, Math.min(ticks, 9)) : 5) // Clamping value between 2 and 10\n                    .tickPadding(this.tickPadding)\n                    .tickSize(tickSize)\n                    .tickSizeOuter(0)\n                    .tickFormat((d) => d.toLocaleString()));\n            }\n            else {\n                handle\n                    .style('font-size', this.fontSize)\n                    .style('font-family', 'Open Sans')\n                    .transition('newScale')\n                    .duration(this.defaultDuration)\n                    .call(toCall\n                    .ticks(this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? Math.max(2, Math.min(ticks, 9)) : 5) // Clamping value between 2 and 10\n                    .tickPadding(this.tickPadding)\n                    .tickSize(tickSize)\n                    .tickSizeOuter(0)\n                    .tickFormat((d) => d.toLocaleString()));\n            }\n            handle\n                .selectAll('line')\n                .attr('stroke', 'lightgray');\n            if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical)\n                this._yAxisHandle.select('.domain').attr('display', 'none');\n        };\n        // Highlight bar\n        this.hover = (event) => {\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(event.target).transition(\"hover\").duration(20).attr(\"fill\", event.target.tagName === 'rect' ? \"#4C4C8B\" : \"var(--digi--color--text--link-hover)\");\n        };\n        // Removing highlight from bar\n        this.hoverOut = (event) => {\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(event.target).transition(\"hover\").duration(this.defaultDuration).attr(\"fill\", event.target.tagName === 'rect' ? '#00005a' : '#333333');\n        };\n        this.openTooltip = (...[, d]) => {\n            // If type is string, the user has clicked on a y-axis tick\n            if (typeof (d) === 'string') {\n                this._tooltipData = this._barChartContainer.select(`#barGroup${d.replace(/[^A-Z0-9]+/ig, \"_\")}`).datum();\n            }\n            else\n                this._tooltipData = d;\n            let tooltipBody = this._tooltip.select(\".tooltipBody\");\n            tooltipBody.select(this._tooltipHeading)\n                .style('margin', '0 0.75rem 0 0 ')\n                .style('font-weight', 500)\n                .html(this._tooltipData.key);\n            tooltipBody.selectAll('div')\n                .data([this._tooltipData])\n                .join('div')\n                .style(\"display\", \"flex\")\n                .style(\"flex-direction\", \"row\")\n                .style(\"flex-wrap\", \"nowrap\")\n                .style(\"white-space\", \"nowrap\")\n                .style(\"justify-content\", \"space-between\")\n                .html((d) => d.value.toLocaleString());\n            this._tooltip.style('display', 'flex');\n            this.positionTooltip(this._tooltipData);\n        };\n        this.closeTooltip = () => {\n            this._tooltip.style('display', 'none');\n        };\n        // Positions tooltip in horizontal mode\n        this.positionTooltip = (data) => {\n            const width = this._tooltip.node().getBoundingClientRect().width;\n            const height = this._tooltip.node().getBoundingClientRect().height + 8;\n            const diff = (this._xScale(data.value) / 2) - (width / 2);\n            if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n                this._tooltip.style('transform', `translate(${this._margin.left + this.tickPadding + Math.max(diff, -4)}px, ${this._yScale(data.key) + this._yScale.bandwidth() + this._yScale.paddingInner() * this._yScale.bandwidth()}px )`)\n                    .style('max-width', this._xScale.range()[1] + 'px');\n                this._tooltip\n                    .select('digi-icon-caret-up')\n                    .style('position', 'absolute')\n                    .style('--digi--icon--color', 'white')\n                    .style('top', '-11px')\n                    .style('left', '0')\n                    .style('transform', `translate(${diff > 0 ? (width / 2) - 10 : (this._xScale(data.value) / 2)}px,0)`);\n            }\n            else {\n                this._tooltip.style('transform', `translate(${this._margin.left + this.tickPadding + this._xScale(data.key) + (this._xScale.bandwidth() / 2) - (width / 2)}px, ${this._yScale(data.value) - height}px )`)\n                    .style('max-width', this._xScale.range()[1] + 'px');\n                this._tooltip\n                    .select('digi-icon-caret-down')\n                    .style('position', 'absolute')\n                    .style('--digi--icon--color', 'white')\n                    .style('left', '0')\n                    .style('bottom', '-11px')\n                    .style('transform', `translate(${(width / 2) - 6}px,0)`);\n            }\n        };\n        // Once texts has fully loaded, we can recompute some sizes\n        this.recomputeTextSize = () => {\n            var _a;\n            if (this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal)\n                this._tickWidth = this.getLargestText(this._xScale.ticks().map((tick) => tick.toLocaleString()));\n            this.tickSizes();\n            this._barChartContainer.selectAll('.barGroup').data(this.reshapeData);\n            if ((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.valueLabels)\n                this._textSelection.remove();\n            this.initBarText();\n        };\n        // Removes resize observer for chart and inits table\n        this.activateTable = (event) => {\n            this.closeTooltip();\n            this.barChartObserver.disconnect();\n            this.tableObserver.observe(this._chartDiv);\n            this._status.innerHTML = '<p>Visas som tabell</p>';\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.tableButton').style('display', 'none');\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.chartButton').style('display', null);\n            event.target.nextSibling.lastChild.focus();\n            const duration = 150;\n            this._svg\n                .attr('opacity', 1)\n                .transition('fadeout')\n                .duration(duration)\n                .attr('opacity', 0)\n                .on('end', () => {\n                this._svg.remove();\n                this._legendDiv.style['display'] = 'none';\n                this._tableDiv.style['display'] = 'block';\n                this.setTableContent();\n                this.setTableDimensions();\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._tableDiv).style('opacity', 0)\n                    .transition('fadein')\n                    .duration(duration)\n                    .style('opacity', 1);\n            });\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._legendDiv).style('opacity', 1)\n                .transition('fadeout')\n                .duration(duration)\n                .style('opacity', 0);\n        };\n        // Removes observer and calls init functions for line chart\n        this.reInitChart = (event) => {\n            this.tableObserver.disconnect();\n            this._status.innerHTML = '<p>Visas som diagram</p>';\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.tableButton').style('display', null);\n            (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.chartButton').style('display', 'none');\n            event.target.previousSibling.lastChild.focus();\n            const table = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._tableDiv);\n            table.style('opacity', 1)\n                .transition()\n                .duration(150)\n                .style('opacity', 0)\n                .on('end', () => {\n                table.style('display', 'none');\n                this.initChain();\n                this._svg\n                    .attr('opacity', 0)\n                    .transition()\n                    .duration(150)\n                    .attr('opacity', 1);\n            });\n        };\n        this.afVariation = _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Vertical;\n        this.afHeadingLevel = 'h3';\n        this.afId = (0,_randomIdGenerator_util_9cf19c59_js__WEBPACK_IMPORTED_MODULE_3__.r)('tooltip');\n        this.afChartData = undefined;\n    }\n    afChartDataUpdate(data) {\n        if (typeof (data) != 'string')\n            this._chartData = data;\n        else\n            this._chartData = JSON.parse(data);\n    }\n    initSvg() {\n        var _a, _b, _c, _d;\n        // Fetch number formatting\n        this._numberFormat = { maximumSignificantDigits: (_b = (_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.labelProperties) === null || _b === void 0 ? void 0 : _b.significantDigits, notation: ((_d = (_c = this._chartData.meta) === null || _c === void 0 ? void 0 : _c.labelProperties) === null || _d === void 0 ? void 0 : _d.shortHand) ? 'compact' : 'standard' };\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).select('svg').remove();\n        this._maxHeight = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).node().parentNode.getBoundingClientRect().height;\n        this.barChartObserver.observe(this._chartDiv);\n        // Getting rem-size\n        this._rem = parseFloat(getComputedStyle(document.documentElement).fontSize);\n        this.setMinMax();\n        this.setDims();\n        this.setMargins();\n        // Appending svg\n        this._svg = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).append('svg')\n            .attr('aria-hidden', true)\n            .attr('role', 'img')\n            .attr('aria-label', this._chartData && this._chartData.title ? 'Stapeldiagram om ' + this._chartData.title.toLowerCase() : 'Stapeldiagram');\n        this._svg.attr('width', this._dims.width).attr('height', this._dims.height);\n    }\n    initToolTip() {\n        // Getting handle for tooltip\n        this._tooltip = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(\"#\" + this.afId);\n        this._tooltip.select('.close').on('click', this.closeTooltip);\n        this._tooltipHeading = 'h' + (parseInt(this.afHeadingLevel.replace(/\\D/g, \"\")) + 1); // increment heading level by one\n        // Add heading placeholder for heading\n        this._tooltip.selectAll(\".tooltipBody\")\n            .append(this._tooltipHeading)\n            .attr('class', 'tooltipHeading') // Adding class to try to dodge global css classes\n            .style('font-size', '1rem')\n            .style('margin', '0 0.75rem')\n            .style('font-weight', '500');\n    }\n    initEmpty() {\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).select('svg').remove();\n        this._maxHeight = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).node().parentNode.getBoundingClientRect().height;\n        this.barChartObserver.observe(this._chartDiv);\n        // Getting rem-size\n        this._rem = parseFloat(getComputedStyle(document.documentElement).fontSize);\n        //this.setMinMax();\n        this.setDims();\n        this.setMargins();\n        // Appending svg\n        this._svg = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).append('svg')\n            .attr('aria-hidden', true)\n            .attr('role', 'img')\n            .attr('aria-label', this._chartData && this._chartData.title ? 'Stapeldiagram om ' + this._chartData.title.toLowerCase() : 'Stapeldiagram');\n        this._svg.attr('width', this._dims.width).attr('height', this._dims.height);\n        // Hide unusable components\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).select(this.afHeadingLevel).html(`${_text_f08f550e_js__WEBPACK_IMPORTED_MODULE_2__._.loading}...`);\n        this.initYAxis(true);\n        this.initXAxis(true);\n        this.loadingState(true);\n    }\n    loadingState(empty) {\n        this._loading = true;\n        // close potentially open tooltip\n        if (this._tooltip)\n            this.closeTooltip();\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.tableButton').style('display', 'none');\n        const newHeight = this.setDims();\n        this.transitionTitle();\n        this._xAxisHandle.selectAll('.tick').remove();\n        this._xAxisHandle.select('path').remove();\n        this._svg\n            .transition()\n            .duration(400)\n            .attr('width', this._dims.width)\n            .attr('height', this._dims.height)\n            .attr('aria-label', this._chartData && this._chartData.title ? 'Stapeldiagram om ' + this._chartData.title.toLowerCase() : 'Stapeldiagram');\n        this.setMargins(true);\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).select(this.afHeadingLevel).html(`${_text_f08f550e_js__WEBPACK_IMPORTED_MODULE_2__._.loading}...`);\n        // Waiting with observing for changes until transition to regular bars is complete\n        this._barChartContainer\n            .transition('position')\n            .duration(this.defaultDuration)\n            .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n            .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n        // If there is a new height\n        if (newHeight) {\n            // Update y-axis with potentially new height (might want to do a check here)\n            this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.range([this._margin.top, this._dims.height - this._margin.bottom]) : this._yScale.range([this._dims.height - this._margin.bottom, this._margin.top]);\n            this._xAxisHandle.attr('transform', `translate(0,${this._dims.height - this._margin.bottom})`);\n        }\n        let animateBars = () => {\n            this._barChartContainer.selectAll('.barGroup').remove();\n            this._barSelection = this._barChartContainer.selectAll('barGroup').data(this.reshapeData)\n                .join(\"g\")\n                .attr(\"class\", \"barGroup\")\n                .attr('id', (d) => 'barGroup' + d.key.replace(/[^A-Z0-9]+/ig, \"_\"))\n                .append('rect')\n                .attr('class', 'bar')\n                .style('cursor', 'pointer');\n            this._barSelection\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n                .attr('ry', 4)\n                .attr('rx', 4)\n                .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n                .attr('height', () => 0)\n                //.attr('height', (d: any) => this.afVariation === BarChartVariation.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value))\n                .attr('fill', 'gray')\n                .transition()\n                .duration(400)\n                .delay((...[, i]) => i * 150)\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n                .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value));\n            this._barSelection\n                .transition()\n                .duration(400)\n                .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.e)\n                .delay((...[, i]) => i * (150) + 400)\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                .attr('height', () => 0)\n                .on('end', (...[, i]) => {\n                if (i === this._placeholderTicks.length - 1)\n                    animateBars();\n            });\n        };\n        let flattenBars = () => {\n            this._barChartContainer.selectAll('rect')\n                .transition()\n                .duration(200)\n                .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.e)\n                .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                .attr('height', () => 0)\n                .on('end', (...[, i]) => {\n                if (i != 0)\n                    return;\n                this.setYScale(true);\n                this.setValueTicks();\n                this.setXScale(true);\n                this.barChartObserver.observe(this._chartDiv);\n                animateBars();\n            });\n        };\n        if (empty)\n            animateBars();\n        else\n            flattenBars();\n    }\n    transitionTitle() {\n        const height = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).style('height');\n        (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv)\n            .style('height', this._prevHeight)\n            .transition('adjust')\n            .duration(400)\n            .style('height', height)\n            .on('end', () => (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).style('height', null));\n    }\n    initYAxis(empty) {\n        this.setYScale(empty);\n        this._barChartContainer = this._svg\n            .append('g')\n            .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n        this._yAxisHandle = this._barChartContainer\n            .append(\"g\");\n        if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n            this.tickSizes();\n            this.setNamedTicks();\n            this.setTickInteraction();\n        }\n        else\n            this.setValueTicks();\n    }\n    // Sets the largest and smallest value from series 0, Should only be used when not loading\n    setMinMax() {\n        var _a;\n        this._maxVal = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.m)(this._chartData.data.series[0].yValues);\n        this._minVal = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.d)([0, (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.d)(this._chartData.data.series[0].yValues)]);\n        this._tempScale = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.l)()\n            .domain([this._minVal, this._maxVal])\n            .nice(((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.numberOfReferenceLines) ? this._chartData.meta.numberOfReferenceLines : 3).domain();\n    }\n    // Setting up x-axis, getting margin.right in this function\n    initXAxis(empty) {\n        this.setXScale(empty);\n        this._xAxisHandle = this._barChartContainer\n            .append(\"g\")\n            .attr('transform', `translate(0,${this._dims.height - this._margin.bottom})`);\n        if (this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal) {\n            this.setValueTicks();\n            // Removing first tick, because it aligns with y-axis domain\n            this._xAxisHandle.select('.tick').select('line').remove();\n        }\n        else {\n            if (!empty) {\n                this.tickSizes();\n                this.setNamedTicks();\n                this.setTickInteraction();\n            }\n        }\n    }\n    // Initializing bars, can only handle one series of bars for now\n    initBars() {\n        this._barSelection = this._barChartContainer.selectAll('barGroup').data(this.reshapeData)\n            .join(\"g\")\n            .attr(\"class\", \"barGroup\")\n            .attr('id', (d) => 'barGroup' + d.key.replace(/[^A-Z0-9]+/ig, \"_\"))\n            .append('rect')\n            .attr('class', 'bar')\n            .style('cursor', 'pointer');\n        this._barSelection\n            .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : this._yScale(d.value))\n            .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? 2 : this._xScale(d.key))\n            .attr('ry', 4)\n            .attr('rx', 4)\n            .attr('width', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d.value) : this._xScale.bandwidth())\n            .attr('height', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.bandwidth() : (this._dims.height - this._margin.bottom) - this._yScale(d.value))\n            .attr('fill', '#00005a')\n            .on('mouseenter', this.hover)\n            .on('mouseleave', this.hoverOut)\n            .on('click', this.openTooltip);\n    }\n    initBarText() {\n        this._textSelection = this._barChartContainer.selectAll('.barGroup').append(\"text\");\n        this._textSelection.text((d) => d.value.toLocaleString(undefined, this._numberFormat))\n            .attr('class', 'barText')\n            .attr('font-size', this.fontSize)\n            .attr('font-weight', '600')\n            .attr(\"text-anchor\", \"end\")\n            .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) + (this._yScale.bandwidth() / 2) : this._yScale(d.value))\n            .attr('x', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale(d) : this._xScale(d.key) + (this._xScale.bandwidth()))\n            .attr(\"dy\", () => this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? '0.35em' : '-0.25em')\n            .style('pointer-events', 'none')\n            .style('display', () => { var _a; return ((_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.valueLabels) ? null : 'none'; });\n        this.adjustBarText();\n    }\n    initChain() {\n        this.initSvg();\n        this.initToolTip();\n        this.initYAxis();\n        this.initXAxis();\n        this.initBars();\n        this.initBarText();\n    }\n    async updateChain() {\n        var _a, _b, _c, _d;\n        // Fetch number formatting\n        this._numberFormat = { maximumSignificantDigits: (_b = (_a = this._chartData.meta) === null || _a === void 0 ? void 0 : _a.labelProperties) === null || _b === void 0 ? void 0 : _b.significantDigits, notation: ((_d = (_c = this._chartData.meta) === null || _c === void 0 ? void 0 : _c.labelProperties) === null || _d === void 0 ? void 0 : _d.shortHand) ? 'compact' : 'standard' };\n        if (this._tooltip)\n            this.closeTooltip();\n        // Check whether we are in table mode or not\n        if (this._tableDiv.style['display'] == 'block') {\n            if (!this._chartData.title) {\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).select(this.afHeadingLevel).html(`${_text_f08f550e_js__WEBPACK_IMPORTED_MODULE_2__._.loading}...`);\n            }\n            else {\n                this.setTableContent();\n                this.setTableDimensions();\n            }\n            this.transitionTitle();\n        }\n        else {\n            // displaying legend again\n            if (this._loading) {\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._host).select('.tableButton').style('display', null);\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._legendDiv).style('display', null);\n                this.initToolTip();\n            }\n            // Disconnect resize observer while adjusting things\n            this.barChartObserver.disconnect();\n            this.setMinMax();\n            const newHeight = this.setDims();\n            this.transitionTitle();\n            this._svg\n                .transition()\n                .duration(400)\n                .attr('width', this._dims.width)\n                .attr('height', this._dims.height)\n                .attr('aria-label', this._chartData && this._chartData.title ? 'Stapeldiagram om ' + this._chartData.title.toLowerCase() : 'Stapeldiagram');\n            this.setMargins();\n            // Waiting with observing for changes until transition to regular bars is complete\n            this._barChartContainer\n                .transition('position')\n                .duration(this.defaultDuration)\n                .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n            if (!this._loading)\n                this._barChartContainer.on('end', () => this.barChartObserver.observe(this._chartDiv));\n            // If there is a new height\n            if (newHeight) {\n                // Update y-axis with potentially new height (might want to do a check here)\n                this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.range([this._margin.top, this._dims.height - this._margin.bottom]) : this._yScale.range([this._dims.height - this._margin.bottom, this._margin.top]);\n                this._xAxisHandle.attr('transform', `translate(0,${this._dims.height - this._margin.bottom})`);\n            }\n            this.tickSizes();\n            this.setYScale();\n            this.setXScale();\n            this.setTickInteraction();\n            this._tickWidth = this.getLargestText(this.afVariation == _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._xScale.ticks().map((tick) => tick.toLocaleString()) : this._yScale.ticks().map((tick) => tick.toLocaleString()));\n            this.setValueTicks(true);\n            if (this._loading) {\n                (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._legendDiv).style('opacity', 0)\n                    .transition()\n                    .duration(400)\n                    .ease(_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.p)\n                    .style('opacity', 1);\n                this._margin.right = this.getTextSize(this._xScale.domain()[1].toLocaleString()) / 2 + this.yTickSize + this.tickPadding;\n                // Update x-axis with new width\n                this._xScale.range([0, this._dims.width - this._margin.right - this._margin.left]);\n                this.setNamedTicks(true);\n                // Stop animation\n                this._barSelection\n                    .selectAll('.barGroup').on('end', null);\n                this._loading = false;\n                this._barSelection\n                    .transition()\n                    .duration(this.defaultDuration)\n                    .attr('y', (d) => this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale(d.key) : (this._dims.height - this._margin.bottom))\n                    .attr('height', () => 0)\n                    .on('end', (...[, i]) => i === this._placeholderTicks.length - 1 ? this.updateBars(true) : null);\n                this.setTickInteraction();\n            }\n            else {\n                this.setNamedTicks(true);\n                // Removing first tick, because it aligns with y-axis domain\n                this.updateBars();\n            }\n        }\n    }\n    // Resizing bar chart\n    resize() {\n        const newHeight = this.setDims();\n        this.setMargins();\n        this._svg.attr('width', this._dims.width).attr('height', this._dims.height);\n        this._barChartContainer\n            .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n        this._margin.right = this.getTextSize(this._xScale.domain()[1].toLocaleString()) / 2 + this.yTickSize + this.tickPadding;\n        // If there is a new height\n        if (newHeight) {\n            // Update y-axis with potentially new height (might want to do a check here)\n            this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? this._yScale.range([this._margin.top, this._dims.height - this._margin.bottom]) : this._yScale.range([this._dims.height - this._margin.bottom, this._margin.top]);\n            this._xAxisHandle.attr('transform', `translate(0,${this._dims.height - this._margin.bottom})`);\n        }\n        // Update x-axis with new width\n        this._xScale.range([0, this._dims.width - this._margin.right - this._margin.left]);\n        this.setNamedTicks();\n        this.setValueTicks();\n        this.adjustBarSize();\n        this.adjustBarText();\n        if (this._tooltipData)\n            this.positionTooltip(this._tooltipData);\n    }\n    // Returns the longest text from an array of strings\n    getLargestText(array) {\n        let width = 0;\n        array.forEach((elem) => {\n            const temp = this.getTextSize(elem);\n            if (temp > width) {\n                width = temp;\n            }\n        });\n        return width;\n    }\n    componentWillLoad() {\n        this.afChartDataUpdate(this.afChartData);\n    }\n    componentDidLoad() {\n        if (Object.keys(this._chartData).length === 0) {\n            this._loading = true;\n            return this.initEmpty();\n        }\n        this.initChain();\n        document.fonts.ready.then(() => {\n            this.recomputeTextSize();\n            this.setNamedTicks();\n            this._barChartContainer\n                .attr('transform', `translate(${this._margin.left + this.tickPadding + this.yTickSize},0)`);\n        });\n    }\n    componentWillUpdate() {\n        this._prevHeight = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._titleDiv).style('height');\n    }\n    componentDidUpdate() {\n        if (this._tableDiv.style['display'] != 'block' && Object.keys(this._chartData).length === 0) {\n            // Disconnect old barchartobserver while doing resizing\n            this.barChartObserver.disconnect();\n            return this.loadingState();\n        }\n        this.updateChain();\n    }\n    // Not currently used\n    /*get cssModifiers() {\n        return {\n            'digi-bar-chart--vertical': this.afVariation == 'vertical',\n            'digi-bar-chart--horizontal': this.afVariation == 'horizontal'\n        };\n    }*/\n    // Returns pixelwidth of text given the current fontSize (costly function using .each)\n    getTextSize(text) {\n        var textWidth = [];\n        let svg = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._chartDiv).append('svg');\n        svg\n            .selectAll('dummyText')\n            .data([text])\n            .join('text')\n            .attr('font-size', this.fontSize) // <- using 1rem here whereas default is 0.875rem\n            .text((d) => d)\n            .each((...[, i, nodelist]) => {\n            var thisWidth = nodelist[i].getComputedTextLength();\n            textWidth.push(thisWidth);\n            nodelist[i].remove();\n        });\n        svg.remove().exit();\n        return textWidth[0];\n    }\n    // Setting table content from this._chartData\n    setTableContent() {\n        this._tableDiv.innerHTML = `<digi-table af-size=\"small\" af-variation=\"primary\"> <table><caption>${this._chartData.title}</caption><thead><tr>${this.headings()}</tr></thead><tbody>${this.tableBody()}</tbody></table></digi-table>`;\n    }\n    setTableDimensions() {\n        const table = (0,_linear_ef018ffb_js__WEBPACK_IMPORTED_MODULE_1__.s)(this._tableDiv);\n        table\n            // The last value is for compensating the padding set on the table element, changing padding in css, will need change in these two lines\n            .style('height', this._dims.height + 'px');\n        table.style('width', (this._dims.width - (this._rem * 0.65) + 'px'));\n    }\n    // Extracting all headings from data and returning a string with <th>-elements with headings\n    headings() {\n        let headingsString = `<th scope=\"col\">${this._chartData.x}</th>`;\n        this._chartData.data.series.forEach((elem) => {\n            headingsString = headingsString.concat(`<th scope=\"col\">${elem.title}</th>`);\n        });\n        return headingsString;\n    }\n    // Building the table body \n    tableBody() {\n        let body = '';\n        const loopable = this._chartData.data.xValueNames ? this._chartData.data.xValueNames : this._chartData.data.xValues;\n        loopable.forEach((elem, index) => {\n            let cells = '';\n            this._chartData.data.series.forEach((serie) => {\n                cells = cells.concat(`<td>${serie.yValues[index] != null ? serie.yValues[index].toLocaleString() : '-'}</td>`);\n            });\n            body = body.concat(`<tr><th scope='row'>${elem}${cells}</th></tr>`);\n        });\n        return body;\n    }\n    render() {\n        // Setting header\n        let heading = '';\n        if (!this._chartData.subTitle)\n            heading = `<${this.afHeadingLevel}>${this._chartData.title}</${this.afHeadingLevel}>`;\n        else {\n            if (!this._chartData.infoText)\n                heading = `<${this.afHeadingLevel}>${this._chartData.title}</${this.afHeadingLevel}><p>${this._chartData.subTitle}</p>`;\n            else\n                heading = `<${this.afHeadingLevel}>${this._chartData.title}</${this.afHeadingLevel}><p>${this._chartData.subTitle}\n\t\t\t\t<span style=\"display:block;margin-top:0.25rem;font-size:0.875rem;color:var(--digi--global--color--neutral--grayscale--darkest-3)\">${this._chartData.infoText}</span></p>`;\n        }\n        return ((0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.H, { key: '9e660f89c2d4e11cd0554fc9ea3ed7d5b3ff33a8', ref: (el) => (this._host = el) }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '2d2c50e34661acea89d6121fef1c9dc118105f5b', class: \"topWrapper\", ref: (el) => (this._titleDiv = el) }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-typography\", { key: '6b9106bf40dff29f04e90fe6fce9704b2407c021', class: \"chartTitle\", innerHTML: heading }), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-button\", { key: '503b5c04b3e638f96b0e0d0578124e9f3f4adaed', class: \"buttonWrapper tableButton\", \"af-size\": \"medium\", \"af-variation\": \"function\", \"af-full-width\": \"false\", onAfOnClick: this.activateTable, afAriaLabel: `Visa tabell ${this._chartData.title ? this._chartData.title.toLowerCase() : ''}` }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-table\", { key: '8a99fcafd2d2621b8fe9433fb13972f59527aaa4', slot: \"icon\" }), \"Visa tabell\"), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-button\", { key: '2423d8ebf64f6194daf464f4a10a6d8aef3d88fe', style: { 'display': 'none' }, class: \"buttonWrapper chartButton\", \"af-size\": \"medium\", \"af-variation\": \"function\", \"af-full-width\": \"false\", onAfOnClick: this.reInitChart, afAriaLabel: `Visa diagram ${this._chartData.title ? this._chartData.title.toLowerCase() : ''}` }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-chart\", { key: '275a2a0268c6edcc0c49fe241966491d5bdc83b5', slot: \"icon\" }), \"Visa diagram\"), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '5af1918162d642a7335ec3345cea31eb64ff9fbb', class: \"scChartStatus\", role: \"status\", ref: (el) => (this._status = el) })), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '8b36566c0bd60697f6d3703ae7e2100c25796237', class: \"chartTooltip\", id: this.afId }, (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '525ebb9929c43642277ef32a0c25c9363bcfe1ee', class: \"tooltipBody\" }), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-x\", { key: '6dd9101d8aaae2815ba2a5237d3bebc688320f15', class: \"close\" }), this.afVariation === _bar_chart_variation_enum_12d229ed_js__WEBPACK_IMPORTED_MODULE_4__.B.Horizontal ? (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-caret-up\", null) : (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"digi-icon-caret-down\", null)), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '0e2323a10504af506bd652495b81e023cf9abcca', ref: (el) => (this._chartDiv = el) }, \" \"), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: '2611af0328faf9c2c67feb0a9082ca570db6906f', class: \"legend\", ref: (el) => (this._legendDiv = el) }), (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { key: 'ad3ffbf6b8f136dfdaa15ed4fc84074cb4c548f4', class: \"table\", ref: (el) => (this._tableDiv = el) }, \" \")));\n    }\n    get hostElement() { return (0,_index_de760108_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n    static get watchers() { return {\n        \"afChartData\": [\"afChartDataUpdate\"]\n    }; }\n};\nbarChart.style = DigiBarChartStyle0;\n\n\n\n\n//# sourceURL=webpack://yaml-generator/./node_modules/@digi/arbetsformedlingen/dist/esm/digi-bar-chart.entry.js?");

/***/ })

}]);